
package src;

/**
 * –¢–µ—Å—Ç –¥–ª—è –∫–ª–∞—Å—É RunAllCommandsConsoleCommand
 * 
 * @author –¢–µ—Å–ª–µ–Ω–∫–æ –ü–∞–≤–ª–æ
 * @version 1.0
 */
public class CommandProcessingTest {
    
    // –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –≤–∏–≤–æ–¥—É
    private static final String RESET = "\u001B[0m";
    private static final String RED = "\u001B[31m";
    private static final String GREEN = "\u001B[32m";
    private static final String YELLOW = "\u001B[33m";
    private static final String BLUE = "\u001B[34m";
    private static final String PURPLE = "\u001B[35m";
    private static final String CYAN = "\u001B[36m";
    private static final String WHITE = "\u001B[37m";
    private static final String BOLD = "\u001B[1m";
    
    private static ViewResult mockView;
    private static RunAllCommandsConsoleCommand command;
    
    /**
     * –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –ø–µ—Ä–µ–¥ –≤—Å—ñ–º–∞ —Ç–µ—Å—Ç–∞–º–∏
     */
    private static void setUp() {
        printHeader("–ü–æ—á–∞—Ç–æ–∫ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è RunAllCommandsConsoleCommand");
        
        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ç–µ—Å—Ç—É
        mockView = new ViewResult(10); // –°—Ç–≤–æ—Ä—é—î–º–æ –∑ 10 –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
        mockView.viewInit();
        
        System.out.println(YELLOW + "üìä –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö..." + RESET);
        
        // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ –≤—Ä—É—á–Ω—É —á–µ—Ä–µ–∑ —Å–ø–∏—Å–æ–∫ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
        for (int i = 0; i < 10; i++) {
            // –û—Ç—Ä–∏–º—É—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –µ–ª–µ–º–µ–Ω—Ç —ñ –∑–º—ñ–Ω—é—î–º–æ –π–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
            Item2d item = mockView.getItems().get(i);
            item.setX(i);
            item.setY(i * 2 - 5);
            System.out.println(CYAN + "   ‚úì –ï–ª–µ–º–µ–Ω—Ç " + i + ": X=" + item.getX() + ", Y=" + item.getY() + RESET);
        }
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
        command = new RunAllCommandsConsoleCommand(mockView);
        System.out.println(GREEN + "‚úì –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!" + RESET);
        System.out.println();
    }
    
    /**
     * –¢–µ—Å—Ç—É—î –∫–ª—é—á –∫–æ–º–∞–Ω–¥–∏
     */
    private static boolean testCommandKey() {
        System.out.println(YELLOW + "üîë –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞ –∫–æ–º–∞–Ω–¥–∏..." + RESET);
        
        char expectedKey = '–∞';
        char actualKey = command.getKey();
        
        boolean result = expectedKey == actualKey;
        
        if (result) {
            System.out.println(GREEN + "‚úì –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω–æ: –∫–ª—é—á –∫–æ–º–∞–Ω–¥–∏ = '" + actualKey + "'" + RESET);
        } else {
            System.out.println(RED + "‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω–æ: –æ—á—ñ–∫—É–≤–∞–ª–æ—Å—å '" + expectedKey + "', –æ—Ç—Ä–∏–º–∞–Ω–æ '" + actualKey + "'" + RESET);
        }
        
        System.out.println();
        return result;
    }
    
    /**
     * –¢–µ—Å—Ç—É—î –æ–ø–∏—Å –∫–æ–º–∞–Ω–¥–∏
     */
    private static boolean testCommandToString() {
        System.out.println(YELLOW + "üìù –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–ø–∏—Å—É –∫–æ–º–∞–Ω–¥–∏..." + RESET);
        
        String description = command.toString();
        boolean notNull = description != null;
        boolean notEmpty = !description.isEmpty();
        boolean result = notNull && notEmpty;
        
        if (result) {
            System.out.println(GREEN + "‚úì –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω–æ: –æ–ø–∏—Å –∫–æ–º–∞–Ω–¥–∏ = '" + description + "'" + RESET);
        } else {
            if (!notNull) {
                System.out.println(RED + "‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω–æ: –æ–ø–∏—Å –∫–æ–º–∞–Ω–¥–∏ –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è null" + RESET);
            } else if (!notEmpty) {
                System.out.println(RED + "‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω–æ: –æ–ø–∏—Å –∫–æ–º–∞–Ω–¥–∏ —î –ø–æ—Ä–æ–∂–Ω—ñ–º —Ä—è–¥–∫–æ–º" + RESET);
            }
        }
        
        System.out.println();
        return result;
    }
    
    /**
     * –¢–µ—Å—Ç—É—î –º–µ—Ç–æ–¥–∏ –¥–æ—Å—Ç—É–ø—É –¥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è
     */
    private static boolean testCommandView() {
        System.out.println(YELLOW + "üëÅÔ∏è –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ç–æ–¥—ñ–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è..." + RESET);
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è
        boolean viewNotNull = command.getConsoleView() != null;
        
        if (viewNotNull) {
            System.out.println(GREEN + "‚úì –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è –Ω–µ —î null" + RESET);
        } else {
            System.out.println(RED + "‚ùå –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è —î null" + RESET);
            return false;
        }
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è
        ViewResult newView = new ViewResult(5); // –°—Ç–≤–æ—Ä—é—î–º–æ –∑ 5 –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
        View returnedView = command.setConsoleView(newView);
        
        boolean viewSetCorrectly = returnedView == newView;
        boolean getViewReturnsCorrect = command.getConsoleView() == newView;
        
        if (viewSetCorrectly) {
            System.out.println(GREEN + "‚úì –ú–µ—Ç–æ–¥ setConsoleView –ø–æ–≤–µ—Ä—Ç–∞—î —Ç–µ –∂ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è" + RESET);
        } else {
            System.out.println(RED + "‚ùå –ú–µ—Ç–æ–¥ setConsoleView –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è" + RESET);
        }
        
        if (getViewReturnsCorrect) {
            System.out.println(GREEN + "‚úì –ú–µ—Ç–æ–¥ getConsoleView –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è" + RESET);
        } else {
            System.out.println(RED + "‚ùå –ú–µ—Ç–æ–¥ getConsoleView –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è" + RESET);
        }
        
        boolean result = viewNotNull && viewSetCorrectly && getViewReturnsCorrect;
        
        System.out.println();
        return result;
    }
    
    /**
     * –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—ñ—Å–ª—è –≤—Å—ñ—Ö —Ç–µ—Å—Ç—ñ–≤
     */
    private static void tearDown() {
        command = null;
        mockView = null;
        System.out.println(PURPLE + "üßπ –¢–µ—Å—Ç–æ–≤—ñ —Ä–µ—Å—É—Ä—Å–∏ –æ—á–∏—â–µ–Ω–æ" + RESET);
        printHeader("–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
    }
    
    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
     */
    private static void printHeader(String title) {
        System.out.println();
        System.out.println(CYAN + "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" + RESET);
        System.out.println(CYAN + "‚ïë " + BOLD + YELLOW + "  " + title + CYAN + "  ‚ïë" + RESET);
        System.out.println(CYAN + "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" + RESET);
        System.out.println();
    }
    
    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –ø—ñ–¥—Å—É–º–∫—ñ–≤ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
     */
    private static void printResults(boolean[] results) {
        int passed = 0;
        for (boolean result : results) {
            if (result) passed++;
        }
        
        System.out.println(CYAN + "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" + RESET);
        System.out.println(CYAN + "‚ïë " + BOLD + YELLOW + "  üìä –ü–Ü–î–°–£–ú–û–ö –¢–ï–°–¢–£–í–ê–ù–ù–Ø" + CYAN + "                                    ‚ïë" + RESET);
        System.out.println(CYAN + "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" + RESET);
        
        System.out.println(CYAN + "‚ïë " + WHITE + "  üìå –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–µ—Å—Ç—ñ–≤: " + results.length + CYAN + "                              ‚ïë" + RESET);
        System.out.println(CYAN + "‚ïë " + GREEN + "  ‚úÖ –£—Å–ø—ñ—à–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤: " + passed + CYAN + "                                        ‚ïë" + RESET);
        
        if (passed < results.length) {
            System.out.println(CYAN + "‚ïë " + RED + "  ‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤: " + (results.length - passed) + CYAN + "                                     ‚ïë" + RESET);
        } else {
            System.out.println(CYAN + "‚ïë " + YELLOW + "  üéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ! " + CYAN + "                              ‚ïë" + RESET);
        }
        
        System.out.println(CYAN + "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" + RESET);
        System.out.println();
    }
    
    /**
     * –ì–æ–ª–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫—É —Ç–µ—Å—Ç—ñ–≤
     */
    public static void main(String[] args) {
        try {
            setUp();
            
            boolean[] results = new boolean[3];
            results[0] = testCommandKey();
            results[1] = testCommandToString();
            results[2] = testCommandView();
            
            printResults(results);
            
            tearDown();
        } catch (Exception e) {
            System.out.println(RED + "üí• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —Ç–µ—Å—Ç—ñ–≤: " + e.getMessage() + RESET);
            e.printStackTrace();
        }
    }
}
