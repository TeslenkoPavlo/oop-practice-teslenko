package srcFirst.test;

import srcFirst.domain.Exercise;
import srcFirst.domain.ExerciseSolver;

import java.io.File;
import java.io.IOException;

/**
 * –ö–ª–∞—Å TestExercise —Ç–µ—Å—Ç—É—î —Ä–æ–±–æ—Ç—É –∑ Exercise —Ç–∞ ExerciseSolver,
 * –∑–æ–∫—Ä–µ–º–∞ —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é —Ç–∞ –¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –æ–±'—î–∫—Ç—ñ–≤.
 */
public class TestExercise {
    public static void main(String[] args) {
        System.out.println("\nüìä –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ö–õ–ê–°–Ü–í EXERCISE –¢–ê EXERCISESOLVER üìä");
        System.out.println("=====================================================");

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ Exercise
        Exercise exerciseTask = new Exercise(3.0, 4.0);
        System.out.println("\nüîπ –°–¢–í–û–†–ï–ù–ù–Ø –ù–û–í–û–ì–û –û–ë'–Ñ–ö–¢–ê üîπ");
        System.out.println("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç Exercise –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:");
        System.out.println("   üî∏ –ü–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: " + exerciseTask.getFirstParameter());
        System.out.println("   üî∏ –î—Ä—É–≥–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: " + exerciseTask.getSecondParameter());
        System.out.println("   üî∏ –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: " + exerciseTask.getCalculationResult());

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ ExerciseSolver
        ExerciseSolver exerciseSolver = new ExerciseSolver(exerciseTask);

        // –û–±—á–∏—Å–ª–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        System.out.println("\nüîπ –û–ë–ß–ò–°–õ–ï–ù–ù–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–£ üîπ");
        double calculationResult = exerciseSolver.solveExercise();
        System.out.println("‚úÖ –û–±—á–∏—Å–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!");
        System.out.println("   üî∏ –§–æ—Ä–º—É–ª–∞: –ü–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä¬≤ + –î—Ä—É–≥–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä¬≤");
        System.out.println("   üî∏ –û–±—á–∏—Å–ª–µ–Ω–Ω—è: "
                + exerciseTask.getFirstParameter() + "¬≤ + "
                + exerciseTask.getSecondParameter() + "¬≤ = "
                + calculationResult);

        // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–∫–∏ —Ç–∞ —ñ–º–µ–Ω—ñ —Ñ–∞–π–ª—É –¥–ª—è —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        String folderName = "srcFirst";    // –Ω–∞–∑–≤–∞ —Ç–µ–∫–∏
        String fileName = "exercise.ser";  // –Ω–∞–∑–≤–∞ —Ñ–∞–π–ª—É
        File directory = new File(folderName);
        if (!directory.exists()) {
            directory.mkdirs(); // —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–∫—É, —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
        }
        File file = new File(directory, fileName);

        // –°–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞ —É —Ñ–∞–π–ª
        System.out.println("\nüîπ –°–ï–†–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –û–ë'–Ñ–ö–¢–ê üîπ");
        try {
            // –Ø–∫—â–æ —Ñ–∞–π–ª—É –Ω–µ —ñ—Å–Ω—É—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ, –∞–ª–µ —Ö–∞–π –±—É–¥–µ)
            if (!file.exists()) {
                file.createNewFile();
            }

            // –°–µ—Ä—ñ–∞–ª—ñ–∑—É—î–º–æ
            exerciseSolver.saveExerciseToFile(file.getPath());
            System.out.println("‚úÖ –û–±'—î–∫—Ç —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É —Ñ–∞–π–ª!");
            System.out.println("   üî∏ –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É: " + file.getAbsolutePath());
        } catch (IOException e) {
            System.err.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –æ–±'—î–∫—Ç–∞: " + e.getMessage());
        }

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ ExerciseSolver –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        ExerciseSolver newExerciseSolver = new ExerciseSolver(new Exercise());

        // –î–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞ –∑ —Ñ–∞–π–ª—É
        System.out.println("\nüîπ –î–ï–°–ï–†–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –û–ë'–Ñ–ö–¢–ê üîπ");
        try {
            newExerciseSolver.loadExerciseFromFile(file.getPath());
            System.out.println("‚úÖ –û–±'—î–∫—Ç —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ —Ñ–∞–π–ª—É!");

            Exercise loadedExercise = newExerciseSolver.getExerciseTask();
            System.out.println("   üî∏ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π –æ–±'—î–∫—Ç Exercise –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:");
            System.out.println("      - –ü–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: " + loadedExercise.getFirstParameter());
            System.out.println("      - –î—Ä—É–≥–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: " + loadedExercise.getSecondParameter());
            System.out.println("      - –†–µ–∑—É–ª—å—Ç–∞—Ç: " + loadedExercise.getCalculationResult());

        } catch (IOException | ClassNotFoundException e) {
            System.err.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –æ–±'—î–∫—Ç–∞: " + e.getMessage());
        }

        // –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É
        System.out.println("\nüîπ –í–ò–î–ê–õ–ï–ù–ù–Ø –§–ê–ô–õ–£ –ü–Ü–°–õ–Ø –î–ï–°–ï–†–Ü–ê–õ–Ü–ó–ê–¶–Ü–á üîπ");
        if (file.exists()) {
            if (file.delete()) {
                System.out.println("‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!");
            } else {
                System.out.println("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ —Ñ–∞–π–ª!");
            }
        } else {
            System.out.println("‚ùå –§–∞–π–ª –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
        }

        System.out.println("\n=====================================================");
        System.out.println("üìä –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û üìä");
    }
}
